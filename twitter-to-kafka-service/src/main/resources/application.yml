spring:
  application:
    name: twitter-to-kafka-service
  profiles:
    active: twitter_to_kafka
  config:
    import: configserver:http://localhost:8888
  cloud:
    config:
      name: twitter-to-kafka-service,config-client
# This config client here is important because we use this prefix in the configuration files of config server repository.
# So if you look at the config server repository, you will see a file, config-client-twitter_to_kafka. That means we
# want to get the data from that configuration file for Twitter to Kafka service which has the name as a combination of
# spring cloud config name and profiles active. So the naming is important here. The configuration file of a specific
# microservice should have the correct naming with the specified profiles active property.

# And for Uri, we specify the config server url. Which is currently running on localhost 8888.

# Now, if we run the config server, and after that twitter to kafka service, we can check in logs that the configuration
# is really fetched remotely from config server. Note that prior to running Twitter to Kafka service, we also ran Kafka
# cluster. Because Twitter to Kafka service requires a Kafka cluster running locally.